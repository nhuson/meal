version: "3"

services:
  app:
    restart: always
    container_name: app
    build:
      context: ./app
      dockerfile: Dockerfile
    command: npm start
    ports:
      - "8080:8080"
    depends_on:
      - "api"
    volumes:
      - ./app:/home/node/meal-app
    environment:
      NODE_ENV: "development"
    networks:
      - frontent
  api:
    restart: always
    container_name: api
    build:
      context: ./core
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - "3000:3000"
      - "9229:9229"
    depends_on:
      - "mongo"
    volumes:
      - ./core:/home/node/meal-api
    environment:
      NODE_ENV: "development"
    networks:
      - backend
      - frontent
  mongo:
    restart: always
    container_name: mongo
    image: "mongo:latest"
    ports:
      - "27018:27018"
    volumes:
      - data_mongo:/data/db
    networks:
      - backend
      - tools
  admin-mongo:
    restart: always
    container_name: admin-mongo
    image: "mrvautin/adminmongo"
    ports:
      - "1234:1234"
    networks:
      - tools
  # db:
  #   restart: always
  #   container_name: database
  #   image: mysql:5.7
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "123123"
  #     MYSQL_DATABASE: "meal_db"
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ~/data/mysql:/var/lib/mysql
  #     - ./mysql/conf.d:/etc/mysql/conf.d
  #   networks:
  #     - backend
  # redis:
  #   restart: always
  #   image: redis:alpine
  #   container_name: redis
      # volumes:
      #   - ~/data/redis:/var/lib/redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - backend
volumes:
  data_mongo:
networks:
  backend:
  frontent:
  tools: